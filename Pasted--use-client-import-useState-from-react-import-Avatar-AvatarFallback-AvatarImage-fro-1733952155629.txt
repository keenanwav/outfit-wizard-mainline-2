"use client"

import { useState } from 'react'
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Progress } from "@/components/ui/progress"
import { Badge } from "@/components/ui/badge"
import { CalendarDays, CreditCard, BarChart, Settings } from 'lucide-react'

// This would typically come from your API
const mockUserData = {
  name: "Alex Johnson",
  email: "alex@example.com",
  avatarUrl: "https://api.dicebear.com/6.x/avataaars/svg?seed=Alex",
  subscription: {
    plan: "Pro",
    status: "Active",
    renewalDate: "2023-12-31",
  },
  usage: {
    storage: 75,
    apiCalls: 8500,
    projects: 12,
  }
}

export default function UserProfile() {
  const [name, setName] = useState(mockUserData.name)
  const [email, setEmail] = useState(mockUserData.email)

  const handleUpdateProfile = (e: React.FormEvent) => {
    e.preventDefault()
    // Here you would typically send an API request to update the user's profile
    console.log("Profile update requested:", { name, email })
  }

  return (
    <div className="container mx-auto py-10">
      <Tabs defaultValue="profile" className="w-full">
        <TabsList className="grid w-full grid-cols-1 md:grid-cols-4">
          <TabsTrigger value="profile">Profile</TabsTrigger>
          <TabsTrigger value="subscription">Subscription</TabsTrigger>
          <TabsTrigger value="usage">Usage</TabsTrigger>
          <TabsTrigger value="settings">Settings</TabsTrigger>
        </TabsList>
        <TabsContent value="profile">
          <Card>
            <CardHeader>
              <CardTitle>Profile</CardTitle>
              <CardDescription>Manage your profile information</CardDescription>
            </CardHeader>
            <CardContent>
              <form onSubmit={handleUpdateProfile} className="space-y-8">
                <div className="flex flex-col md:flex-row items-center space-y-4 md:space-y-0 md:space-x-4">
                  <Avatar className="h-20 w-20">
                    <AvatarImage src={mockUserData.avatarUrl} alt={name} />
                    <AvatarFallback>{name.split(' ').map(n => n[0]).join('')}</AvatarFallback>
                  </Avatar>
                  <div>
                    <h2 className="text-2xl font-bold">{name}</h2>
                    <p className="text-sm text-muted-foreground">SaaS User</p>
                  </div>
                </div>
                <div className="space-y-4">
                  <div className="space-y-2">
                    <Label htmlFor="name">Name</Label>
                    <Input 
                      id="name" 
                      value={name} 
                      onChange={(e) => setName(e.target.value)}
                    />
                  </div>
                  <div className="space-y-2">
                    <Label htmlFor="email">Email</Label>
                    <Input 
                      id="email" 
                      type="email" 
                      value={email} 
                      onChange={(e) => setEmail(e.target.value)}
                    />
                  </div>
                </div>
                <Button type="submit">Update Profile</Button>
              </form>
            </CardContent>
          </Card>
        </TabsContent>
        <TabsContent value="subscription">
          <Card>
            <CardHeader>
              <CardTitle>Subscription Details</CardTitle>
              <CardDescription>Manage your subscription plan</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <div className="flex justify-between items-center">
                  <div>
                    <p className="text-sm font-medium">Current Plan</p>
                    <h3 className="text-2xl font-bold">{mockUserData.subscription.plan}</h3>
                  </div>
                  <Badge variant="outline" className="text-green-500 border-green-500">
                    {mockUserData.subscription.status}
                  </Badge>
                </div>
                <div className="flex items-center space-x-2 text-sm text-muted-foreground">
                  <CalendarDays className="h-4 w-4" />
                  <span>Renews on {mockUserData.subscription.renewalDate}</span>
                </div>
                <div className="flex items-center space-x-2 text-sm text-muted-foreground">
                  <CreditCard className="h-4 w-4" />
                  <span>Visa ending in 1234</span>
                </div>
                <Button className="w-full">Upgrade Plan</Button>
              </div>
            </CardContent>
          </Card>
        </TabsContent>
        <TabsContent value="usage">
          <Card>
            <CardHeader>
              <CardTitle>Usage Statistics</CardTitle>
              <CardDescription>Monitor your resource usage</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-6">
                <div>
                  <div className="flex justify-between mb-2">
                    <Label>Storage</Label>
                    <span className="text-sm text-muted-foreground">{mockUserData.usage.storage}%</span>
                  </div>
                  <Progress value={mockUserData.usage.storage} className="h-2" />
                </div>
                <div>
                  <div className="flex justify-between mb-2">
                    <Label>API Calls</Label>
                    <span className="text-sm text-muted-foreground">{mockUserData.usage.apiCalls}/10000</span>
                  </div>
                  <Progress value={(mockUserData.usage.apiCalls / 10000) * 100} className="h-2" />
                </div>
                <div>
                  <div className="flex justify-between mb-2">
                    <Label>Projects</Label>
                    <span className="text-sm text-muted-foreground">{mockUserData.usage.projects}/15</span>
                  </div>
                  <Progress value={(mockUserData.usage.projects / 15) * 100} className="h-2" />
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>
        <TabsContent value="settings">
          <Card>
            <CardHeader>
              <CardTitle>Account Settings</CardTitle>
              <CardDescription>Manage your account preferences</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <div className="flex items-center justify-between">
                  <div className="space-y-0.5">
                    <Label>Two-Factor Authentication</Label>
                    <p className="text-sm text-muted-foreground">Add an extra layer of security to your account</p>
                  </div>
                  <Button variant="outline">Enable</Button>
                </div>
                <div className="flex items-center justify-between">
                  <div className="space-y-0.5">
                    <Label>Email Notifications</Label>
                    <p className="text-sm text-muted-foreground">Receive updates about your account activity</p>
                  </div>
                  <Button variant="outline">Configure</Button>
                </div>
                <div className="flex items-center justify-between">
                  <div className="space-y-0.5">
                    <Label>Delete Account</Label>
                    <p className="text-sm text-muted-foreground">Permanently remove your account and all data</p>
                  </div>
                  <Button variant="destructive">Delete</Button>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  )
}

